{"version":3,"sources":["navbar.js","context_home.js","context_detail.js","context.js","app.js","index.js"],"names":["NavbarBtn","props","className","href","onClick","handleNavBtnClick","name","NavbarBtnList","PROJECT_LIST","data","LIST","key","push","Object","entries","Navbar","forwardRef","ref","ref_toggle","useRef","useImperativeHandle","closeNavbar","element","current","ariaExpanded","click","needCloseNavbar","id","chgContextPage","type","data-toggle","data-target","ImgText","text","Img","src","url","alt","PageBtn","isActive","onMouseOver","chgImgGroupPage","PageGroup","pageBtns","i","imgGroupPage","num","ImgGroup","imgWindow","useEffect","w","window","innerWidth","scrollTo","left","behavior","chgWindowPage","imgurFileName","imgs","dataLen","div","length","ContextHome","Title","RowImg","Row","introData","split","intro","forEach","indexOf","Btn","ip","target","rel","role","btnName","ContextDetail","title","detailData","demoIp","githubIp","ContextContainer","context","console","log","contextPage","App","useState","setImgGroupPage","totalImgGroupPage","setTotalImgGroupPage","setContextPage","ref_navbar","ref_totalImgGroupPage","portfolioData","setPortfolioData","loading","setLoading","fetchUser","a","fetch","response","json","eachData","useFetch","DATA_PATH","totalPage","keys","timerID","setInterval","clearInterval","handleNavbarClose","page","val","smoothscroll","polyfill","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c642350f.chunk.js","sourcesContent":["import React, { useRef, forwardRef, useImperativeHandle } from 'react';\r\n\r\nconst NavbarBtn = props => {\r\n    return (\r\n        <a\r\n            className='navbar-band' href='# '\r\n            onClick={props.handleNavBtnClick}>\r\n            {props.name}\r\n        </a>\r\n    );\r\n};\r\n\r\nconst NavbarBtnList = props => {\r\n    const PROJECT_LIST = props.data;\r\n    const LIST = [];\r\n    if (!PROJECT_LIST) return (<br />);\r\n    for (const [key] of Object.entries(PROJECT_LIST)) {\r\n        LIST.push(\r\n            <span key={key}>\r\n                <NavbarBtn\r\n                    name={key}\r\n                    handleNavBtnClick={() => props.handleNavBtnClick(key)} />\r\n                &nbsp;&nbsp;&nbsp;\r\n            </span>\r\n        );\r\n    }\r\n    return LIST;\r\n};\r\n\r\nconst Navbar = forwardRef((props, ref) => {\r\n    const ref_toggle = useRef(null);\r\n\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            closeNavbar() {\r\n                const element = ref_toggle.current;\r\n                if (element.ariaExpanded === 'true') {\r\n                    element.click();\r\n                }\r\n            }\r\n        }),\r\n    )\r\n\r\n    // navbar close\r\n    const closeNavbar = () => {\r\n        const element = ref_toggle.current;\r\n        if (element.ariaExpanded === 'true') {\r\n            element.click();\r\n        }\r\n    }\r\n\r\n    const closeNbAndOpen = key => {\r\n        closeNavbar();\r\n        props.handleNavBtnClick(key);\r\n    }\r\n\r\n    if (props.needCloseNavbar) {\r\n        closeNavbar();\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark\">\r\n            <div className=\"navbar-collapse collapse\"\r\n                id=\"collapsingNavbar\">\r\n                <h5 className=\"text-white\">Side Project</h5>\r\n                <NavbarBtnList\r\n                    data={props.data}\r\n                    handleNavBtnClick={closeNbAndOpen} />\r\n            </div>\r\n            <div\r\n                className='my-navbar-title'\r\n                href=\"# \"\r\n                onClick={() => { props.chgContextPage(0) }}>\r\n                HOME\r\n            </div>\r\n            \r\n            <button className=\"navbar-toggler ml-auto bg-secondary\"\r\n                type=\"button\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#collapsingNavbar\"\r\n                ref={ref_toggle}>\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n                &nbsp;&nbsp;&nbsp;\r\n        </nav>\r\n    );\r\n});\r\n\r\nexport { Navbar };","import React, { useEffect, useRef } from 'react';\r\n\r\nconst ImgText = props => {\r\n    return (\r\n        <div>{props.text}</div>\r\n    );\r\n};\r\n\r\nconst Img = props => {\r\n    return (\r\n        <img\r\n            className='main-img padding-black'\r\n            src={props.url}\r\n            alt=\"img not found\"\r\n            onClick={props.chgContextPage}\r\n        />\r\n    );\r\n};\r\n\r\nconst PageBtn = props => {\r\n    let className = 'main-img-pg';\r\n    if (props.isActive)\r\n        className += ' main-img-pg-active';\r\n    return (\r\n        <a\r\n            href='# '\r\n            className={className}\r\n            onMouseOver={props.chgImgGroupPage}>\r\n        </a>\r\n    );\r\n};\r\n\r\nconst PageGroup = props => {\r\n    const pageBtns = [];\r\n    pageBtns.push(\r\n        <span key={-9999}>&nbsp;&nbsp;</span>\r\n    );\r\n    for (let i = 0; i < props.num; ++i) {\r\n        const isActive = i === props.imgGroupPage ? true : false;\r\n        pageBtns.push(\r\n            <PageBtn\r\n                key={i}\r\n                isActive={isActive}\r\n                chgImgGroupPage={() => props.chgImgGroupPage(i)} />\r\n        );\r\n        pageBtns.push(\r\n            <span key={i - 100}>&nbsp;&nbsp;</span>\r\n        );\r\n    }\r\n    return (\r\n        <div className='main-img-pg-content' >\r\n            {pageBtns}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ImgGroup = props => {\r\n    const imgWindow = useRef(null);\r\n\r\n    useEffect(() => {\r\n        function chgWindowPage(i) {\r\n            const w = window.innerWidth;\r\n            imgWindow.current.scrollTo({\r\n                left: w * i,\r\n                behavior: \"smooth\"\r\n            });\r\n        }\r\n        chgWindowPage(props.imgGroupPage);\r\n    });\r\n\r\n\r\n    const path = 'https://i.imgur.com/';\r\n    const imgurFileName = [];\r\n    const text = [];\r\n    const extension = '.png';\r\n    const imgs = [];\r\n    let dataLen = 0;\r\n    if (props.data == null) return (<br />);\r\n\r\n    for (let i in props.data) {\r\n        ++dataLen;\r\n        text.push(i);\r\n        imgurFileName.push(path + props.data[i].imgurFileName + extension);\r\n    }\r\n\r\n    for (let i = 0; i < imgurFileName.length; ++i) {\r\n        const div = (\r\n            <div\r\n                key={i}\r\n                className='main-img-content'>\r\n                <Img url={imgurFileName[i]}\r\n                    chgContextPage={() => props.chgContextPage(text[i])} />\r\n                <ImgText text={text[i]} />\r\n            </div>\r\n        );\r\n        imgs.push(div);\r\n    }\r\n\r\n    return (\r\n        <div\r\n            ref={imgWindow}\r\n            className='img-group'>\r\n            {imgs}\r\n            <PageGroup\r\n                num={dataLen}\r\n                imgGroupPage={props.imgGroupPage}\r\n                chgImgGroupPage={props.chgImgGroupPage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ContextHome = props => {\r\n    return (\r\n        <ImgGroup\r\n            imgGroupPage={props.imgGroupPage}\r\n            data={props.data}\r\n            chgContextPage={props.chgContextPage}\r\n            chgImgGroupPage={props.chgImgGroupPage} />\r\n    );\r\n};\r\n\r\nexport { ContextHome };","import React from 'react';\r\n\r\nconst Title = props => {\r\n    return (\r\n        <h2>\r\n            {props.text}\r\n        </h2>\r\n    );\r\n};\r\n\r\nconst RowImg = props => {\r\n    return (\r\n        <div className='text-center'>\r\n            <img\r\n                className=\"main-img padding-black\"\r\n                src={props.src}\r\n                alt=\"img not found\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst Row = props =>  {\r\n    if (props.introData != null) {\r\n        const text = props.introData.split(\"\\n\");\r\n        const intro = [];\r\n        let i = 0;\r\n        text.forEach(element => {\r\n            // text\r\n            if (element.indexOf('imgur.com') === -1) {\r\n                intro.push(element);\r\n            }\r\n            // is image\r\n            else\r\n                intro.push(\r\n                    <RowImg\r\n                        key={i * - 1 - 1}\r\n                        src={element} />\r\n                );\r\n\r\n            // br or line\r\n            if (element.indexOf('●') !== -1)\r\n                intro.push(<hr key={i++}></hr>);\r\n            else\r\n                intro.push(<br key={i++} />);\r\n        });\r\n\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-12 col-sm-2 col-md-2 col-xl-2'></div>\r\n                <div className='col-12 col-sm-8 col-md-8 col-xl-8 text-left'>\r\n                    {intro}\r\n                </div>\r\n                {/* <div className='col-12 col-md-3'></div> */}\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <br />\r\n    );\r\n};\r\n\r\nconst Btn = props => {\r\n    return (\r\n        <a\r\n            className=\"btn btn-outline-light\"\r\n            href={props.ip}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            role=\"button\">\r\n            {props.btnName}\r\n        </a>\r\n    );\r\n};\r\n\r\nconst ContextDetail = props => {\r\n    const title = props.title;\r\n    const { demoIp, githubIp, introData } = props.detailData;\r\n    return (\r\n        <div>\r\n            <Title\r\n                text={title} />\r\n            <br />\r\n            <Row\r\n                introData={introData} />\r\n            <br />\r\n            <Btn\r\n                ip={demoIp}\r\n                btnName={'DEMO'} />\r\n            &nbsp;&nbsp;\r\n            <Btn\r\n                ip={githubIp}\r\n                btnName={'GitHub'} />\r\n            <br /><br /><br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport { ContextDetail };\r\n","import React from 'react';\r\nimport { ContextHome } from './context_home';\r\nimport { ContextDetail } from './context_detail';\r\n\r\nconst ContextContainer = props => {\r\n    const PROJECT_LIST = props.data;\r\n    console.log(PROJECT_LIST)\r\n    let context;\r\n    if (PROJECT_LIST === null) return (<br />);\r\n    // project page\r\n    if (props.contextPage !== 0) {\r\n        const data = PROJECT_LIST[props.contextPage];\r\n        context = (\r\n            <div className='container-fluid text-center'>\r\n                <ContextDetail\r\n                    key={props.contextPage}\r\n                    title={props.contextPage}\r\n                    detailData={data} />\r\n            </div>\r\n        );\r\n    }\r\n    // home page\r\n    else {\r\n        context = (\r\n            <ContextHome\r\n                imgGroupPage={props.imgGroupPage}\r\n                data={props.data}\r\n                chgContextPage={props.chgContextPage}\r\n                chgImgGroupPage={props.chgImgGroupPage} />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            {context}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport { ContextContainer };","import React, { useState, useEffect, useRef } from 'react';\r\nimport './index.css';\r\nimport { Navbar } from './navbar';\r\nimport { ContextContainer } from './context';\r\n\r\nconst DATA_PATH = './data/';\r\nconst MAIN_FILE = 'mySite.json';\r\n\r\nconst useFetch = url => {\r\n    const [portfolioData, setPortfolioData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const fetchUser = async() => {\r\n        const response = await fetch(url);\r\n        const portfolioData = await response.json();\r\n        for (let key in portfolioData) {\r\n            const response = await fetch(DATA_PATH + portfolioData[key]['fileName']);\r\n            const eachData = await response.text();\r\n            portfolioData[key]['introData'] = eachData;\r\n        }\r\n        setPortfolioData(portfolioData);\r\n        setLoading(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUser();\r\n    }, []);\r\n    \r\n    return { portfolioData, loading };\r\n};\r\n\r\nconst App = () => {\r\n    const [imgGroupPage, setImgGroupPage] = useState(0);\r\n    const [totalImgGroupPage, setTotalImgGroupPage] = useState(0);\r\n    const [contextPage, setContextPage] = useState(0);\r\n    const ref_navbar = useRef(null);\r\n    const ref_totalImgGroupPage = useRef(totalImgGroupPage);\r\n    const { portfolioData, } = useFetch(DATA_PATH + MAIN_FILE);\r\n\r\n    useEffect(() => {\r\n        console.log('portfolio data change')\r\n        console.log(portfolioData)\r\n        console.log(DATA_PATH + MAIN_FILE)\r\n        console.log(MAIN_FILE)\r\n        if (portfolioData !== null) {\r\n            const period = 10000;\r\n            const totalPage = Object.keys(portfolioData).length;\r\n            setTotalImgGroupPage(totalPage);\r\n\r\n            const timerID = setInterval(() => {\r\n                chgImgGroupPage();\r\n            }, period);\r\n            return () => {\r\n                clearInterval(timerID);\r\n                console.log('clear Interval')\r\n            }\r\n        }\r\n    }, [portfolioData]);\r\n\r\n    useEffect(() => {\r\n        ref_totalImgGroupPage.current = totalImgGroupPage\r\n    }, [totalImgGroupPage])\r\n\r\n    const handleNavbarClose = () => {\r\n    const element = ref_navbar.current;\r\n        element.closeNavbar();\r\n    }\r\n\r\n    const handleNavBtnClick = val => {\r\n        if (contextPage !== val)\r\n            setContextPage(val);\r\n    }\r\n\r\n    const chgImgGroupPage = (page = -1) => {\r\n        if (page === -1) {\r\n            setImgGroupPage(imgGroupPage => {\r\n                if (imgGroupPage + 1 >= ref_totalImgGroupPage.current)\r\n                    return 0;\r\n                return imgGroupPage + 1;\r\n            });\r\n        } else {\r\n            setImgGroupPage(page);\r\n        }\r\n    };\r\n\r\n    // 0-> home\r\n    // other-> detail\r\n    const chgContextPage = contextPage => {\r\n        if (contextPage === 0) {\r\n            handleNavbarClose();\r\n            chgImgGroupPage(0);\r\n        }\r\n        setContextPage(contextPage);\r\n    }\r\n\r\n    return ( <>\r\n        <Navbar \r\n            ref = { ref_navbar }\r\n            data = { portfolioData }\r\n            handleNavBtnClick = { handleNavBtnClick }\r\n            chgContextPage = { chgContextPage }\r\n        /> \r\n        <ContextContainer \r\n            imgGroupPage = { imgGroupPage }\r\n            contextPage = { contextPage }\r\n            data = { portfolioData }\r\n            chgContextPage = { chgContextPage }\r\n            handleNavbarClose = { handleNavbarClose }\r\n            chgImgGroupPage = { chgImgGroupPage }/> \r\n        </>\r\n    );\r\n}\r\n\r\nexport { App };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './app.js';\r\nimport smoothscroll from 'smoothscroll-polyfill';\r\n\r\n\r\nsmoothscroll.polyfill();\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}